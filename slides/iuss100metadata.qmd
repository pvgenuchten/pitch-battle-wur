---
title: "Participatory data catalogs to facilitate informed decision-making"
author: van Genuchten, P; Genova, G; van der Woude, T; van Egmond, F; FantappiÃ¨, M; Kempen, B; Kralidis, T;
date: 2024-05-20
format:
  revealjs:
    incremental: true
    theme: serif
    logo: https://centennialiuss2024.org/wp-content/uploads/thegem-logos/logo_5a1b6ef19d24be2d25d0c8de8ee6a108_2x.png
    footer: "IUSS Centenial, Florence, Italy"
---

## Overview

Data Standards in the soil domain are quite elaborate, but adoption is low. 

- metadata 
- data standardisation 
- common code lists

The tools shoud be open source, supporting standards and easy to use. 

# Metadata

## Which metadata?

- Data describing datasets
- Title, Author, Usage constraints, Temporal extent, Provenance, Data model, ...

## Metadata and the soil domain

- Prediction of spatio temporal variation, soil degradation and crop yields require many types of data
- Data should be well documented to understand the relevance and the usage constraints of the derived products 

## Metadata Current situation

- Not existing
- Not standardised; in a report or readme.txt file 
- Maintained in a catalogue; disconnected from data

## pygeometa, metadata for the rest of us

- A convention of the geopython community
- YAML, easy to read by humans and machines
- A subset of the ISO19115 standard for metadata
- Exportable to variety of metadata standards (iso, dcat, stac)

## Tooling around the pygeometa library

- Scan a network folder for (meta)data
- Export metadata to a catalogue
- Store metadata in a git repository
- Import metadata from excel or remote sources (harvest)

## Schematic

```{mermaid}
flowchart TB
    G[Git] --> CI{{pygeometa}} 
    CI --> DB[(Database)]
    DB --> C(Catalogue)
    C --> G
    C --> CSW(CSW)
    C --> OAR(OGCAPI Records)
    C --> OAI(OAI-PMH)
```

## Developed and used in a series of research projects

:::: {.columns}
::: {.column width="50%"}

- [EJP Soil](https://ejpsoil.eu)
- [Soilwise](https://soilwise-he.eu)
- [Marvic](https://project-marvic.eu)

:::
::: {.column width="50%"}

- [Land Soil Crop Hubs](https://lsc-hubs.org) (Desira)
- [Space to Place](https://ifdc.org/projects/soils-space-to-place/)
- [Soils for Africa](https://www.soils4africa-h2020.eu/)

:::
::::

## Screen shots

::: {.r-stack}
![](./img/iuss100/ejpsoil-catalogue.png){.fragment width="600" }

![](./img/iuss100/lsc-hubs.png){.fragment width="500"}

![](./img/iuss100/marvic.png){.fragment width="800" }
:::

# Data standardisation

## Initiatives

- Various initiatives developed models for interoperable soil observation data.
- Globalsoilmap, eSoter, iso28258, INSPIRE, Glosis-ld, SoilThings.
- For various reasons adoption has been low.
- Many initiatives are actually compatible, because they contain similar concepts. 
- Standardisation awareness is rising.

## SoilGPKG; A use case designed to facilitate soil data interoperability

Challenge: 

- The INSPIRE UML models and their GML serialisation are disconnected from data practices in the soil community, both for data providers and consumers

Solution: 

- A relational database model has been developed representing the UML classes of the INSPIRE schema. 

## SoilGPKG

- The Geopackage can be shared as a portable database file. 
- A transformation solution is provided which can transform the data into the GML serialisation (Hale Studio).
- The resulting GML can be validated in the INSPIRE data validator
- The Geopackage can be easily displayed in Desktop GIS tools, such as QGIS

## SoilGPKG

- Developed by Crea (IT) and Epsilon in the scope of EJPSoil
- Crea has loaded 1250 profiles into a GeoPackage
- Suggested as a good practice for sharing soil data in INSPIRE
- The relational model can also be used in PostGreSQL as a backend for actual applications.

# Common code lists

## Why endorse common code lists?

- Common referencable code lists are important, to facilitate interoperability in the soil domain
- Different providers can reference a universal definition of an entity
- Code lists for soil types, soil properties, soil property classes, soil analyses procedures, ... 
- References can be made from metadata as well as data


## Challenges with current code list repositories

- Agrovoc adopted an older version of WRB
- WRB itself does not host a code list repository
- INSPIRE registry did not populate the soil code lists 
- Glosis-ld codelists are not widely known and adopted (and not easy to use)

## At this conference

We hope to speak to you to design mechanisms to establish soil code list repositories which are recognised and easy to use.

# Thank you

Questions/comments?

## References

:::: {.columns}
::: {.column width="50%"}

- [iso28258](https://www.iso.org/standard/44595.html)
- [eSoter](https://esoter.net/)
- [Glosis-ld](https://github.com/glosis-ld/glosis)
- [Soilthings](https://api4inspire.k8s.ilt-dmz.iosb.fraunhofer.de/servlet/is/203/)
- [WRB](https://wrb.isric.org/)
- [Agrovoc](https://agrovoc.fao.org/browse/agrovoc/en/page/c_89f35c33)


:::
::: {.column width="50%"}

- [INSPIRE Registry](https://inspire.ec.europa.eu/registry)
- [INSPIRE Soil](https://knowledge-base.inspire.ec.europa.eu/soil_en)
- [pygeometa](https://geopython.github.io/pygeometa/)
- [pygeodatecrawler](https://pypi.org/project/geodatacrawler/)
- [pycsw](https://pycsw.org)
- [SoilGPKG](https://github.com/ejpsoil/inspire_soil_gpkg_template)

:::
::::